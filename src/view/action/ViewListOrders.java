/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.action;

import controller.FactoryDAO;
import controller.dao.interfaces.IGenerticDAO;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Locale;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import model.Order;
import model.OrderDetails;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import view.ErrorsMessageDialog;
import view.SuccessfulMessageDialog;

/**
 *
 * @author THUY
 */
public class ViewListOrders extends javax.swing.JFrame {

    private IGenerticDAO orderDAO = FactoryDAO.getData("order");
    private IGenerticDAO odtDAO = FactoryDAO.getData("orderDetails");

    private List<Order> listOrder;
    private DefaultTableModel modelOrder;

    /**
     * Creates new form ViewListOrders
     */
    public ViewListOrders() {
        initComponents();
        this.setLocationRelativeTo(null);

        listOrder = orderDAO.getList();
        Collections.sort(listOrder, (x1, x2) -> (int) (x2.getId() - x1.getId()));

        modelOrder = (DefaultTableModel) tblListOrder.getModel();

        setDataTable(listOrder);
        customTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListOrder = new javax.swing.JTable();
        txtKeySearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JLabel();
        bntDelete = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        btnOrderDetails = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnRefreshh = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        calStartDate = new com.toedter.calendar.JDateChooser();
        calEndDate = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        bntFilterByDate = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        btnClearAll = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        btnExportFileExcel = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel2.setBackground(new java.awt.Color(227, 175, 138));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_close_window_50px_1.png"))); // NOI18N
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(227, 175, 138), 2));

        tblListOrder.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        tblListOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Order ID", "Cashier name", "Total bill", "Created at"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListOrder.setSelectionBackground(new java.awt.Color(191, 146, 114));
        jScrollPane1.setViewportView(tblListOrder);
        if (tblListOrder.getColumnModel().getColumnCount() > 0) {
            tblListOrder.getColumnModel().getColumn(0).setResizable(false);
            tblListOrder.getColumnModel().getColumn(0).setPreferredWidth(15);
            tblListOrder.getColumnModel().getColumn(1).setResizable(false);
            tblListOrder.getColumnModel().getColumn(1).setPreferredWidth(70);
            tblListOrder.getColumnModel().getColumn(2).setResizable(false);
            tblListOrder.getColumnModel().getColumn(2).setPreferredWidth(180);
            tblListOrder.getColumnModel().getColumn(3).setResizable(false);
            tblListOrder.getColumnModel().getColumn(4).setResizable(false);
            tblListOrder.getColumnModel().getColumn(4).setPreferredWidth(300);
        }

        txtKeySearch.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtKeySearch.setForeground(new java.awt.Color(98, 66, 43));
        txtKeySearch.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(191, 146, 114)));
        txtKeySearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKeySearchActionPerformed(evt);
            }
        });

        btnSearch.setForeground(new java.awt.Color(98, 66, 43));
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_search_25px_1.png"))); // NOI18N
        btnSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(191, 146, 114)));
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSearchMouseClicked(evt);
            }
        });

        bntDelete.setBackground(new java.awt.Color(191, 146, 114));
        bntDelete.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        bntDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bntDelete.setPreferredSize(new java.awt.Dimension(135, 50));
        bntDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bntDeleteMouseClicked(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel11.setText("DELETE");

        javax.swing.GroupLayout bntDeleteLayout = new javax.swing.GroupLayout(bntDelete);
        bntDelete.setLayout(bntDeleteLayout);
        bntDeleteLayout.setHorizontalGroup(
            bntDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bntDeleteLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(29, 29, 29))
        );
        bntDeleteLayout.setVerticalGroup(
            bntDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btnOrderDetails.setBackground(new java.awt.Color(191, 146, 114));
        btnOrderDetails.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        btnOrderDetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnOrderDetails.setPreferredSize(new java.awt.Dimension(135, 50));
        btnOrderDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOrderDetailsMouseClicked(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel12.setText("DETAILS");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_details_27px_1.png"))); // NOI18N

        javax.swing.GroupLayout btnOrderDetailsLayout = new javax.swing.GroupLayout(btnOrderDetails);
        btnOrderDetails.setLayout(btnOrderDetailsLayout);
        btnOrderDetailsLayout.setHorizontalGroup(
            btnOrderDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnOrderDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        btnOrderDetailsLayout.setVerticalGroup(
            btnOrderDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btnRefreshh.setBackground(new java.awt.Color(191, 146, 114));
        btnRefreshh.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        btnRefreshh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRefreshh.setPreferredSize(new java.awt.Dimension(135, 50));
        btnRefreshh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRefreshhMouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel14.setText("REFRESH");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_refresh_27px_2.png"))); // NOI18N

        javax.swing.GroupLayout btnRefreshhLayout = new javax.swing.GroupLayout(btnRefreshh);
        btnRefreshh.setLayout(btnRefreshhLayout);
        btnRefreshhLayout.setHorizontalGroup(
            btnRefreshhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnRefreshhLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        btnRefreshhLayout.setVerticalGroup(
            btnRefreshhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        calStartDate.setDateFormatString("dd-MM-yyyy");
        calStartDate.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        calEndDate.setDateFormatString("dd-MM-yyyy");
        calEndDate.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel4.setText("From:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel5.setText("To:");

        bntFilterByDate.setBackground(new java.awt.Color(191, 146, 114));
        bntFilterByDate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bntFilterByDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bntFilterByDateMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel6.setText("FILTER");

        javax.swing.GroupLayout bntFilterByDateLayout = new javax.swing.GroupLayout(bntFilterByDate);
        bntFilterByDate.setLayout(bntFilterByDateLayout);
        bntFilterByDateLayout.setHorizontalGroup(
            bntFilterByDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bntFilterByDateLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );
        bntFilterByDateLayout.setVerticalGroup(
            bntFilterByDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        btnClearAll.setBackground(new java.awt.Color(191, 146, 114));
        btnClearAll.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        btnClearAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClearAll.setPreferredSize(new java.awt.Dimension(135, 50));
        btnClearAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearAllMouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel13.setText("CLEAR ALL");

        javax.swing.GroupLayout btnClearAllLayout = new javax.swing.GroupLayout(btnClearAll);
        btnClearAll.setLayout(btnClearAllLayout);
        btnClearAllLayout.setHorizontalGroup(
            btnClearAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnClearAllLayout.createSequentialGroup()
                .addGap(0, 21, Short.MAX_VALUE)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        btnClearAllLayout.setVerticalGroup(
            btnClearAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btnExportFileExcel.setBackground(new java.awt.Color(0, 204, 51));
        btnExportFileExcel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        btnExportFileExcel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExportFileExcel.setPreferredSize(new java.awt.Dimension(135, 50));
        btnExportFileExcel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExportFileExcelMouseClicked(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("EXPORT EXCEL FILE");

        javax.swing.GroupLayout btnExportFileExcelLayout = new javax.swing.GroupLayout(btnExportFileExcel);
        btnExportFileExcel.setLayout(btnExportFileExcelLayout);
        btnExportFileExcelLayout.setHorizontalGroup(
            btnExportFileExcelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnExportFileExcelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btnExportFileExcelLayout.setVerticalGroup(
            btnExportFileExcelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Ink Free", 1, 35)); // NOI18N
        jLabel2.setText("List Order ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(514, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(507, 507, 507))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRefreshh, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnOrderDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnExportFileExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(bntDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1081, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtKeySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(183, 183, 183)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(calStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(calEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bntFilterByDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(bntFilterByDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(calEndDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(calStartDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtKeySearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnRefreshh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(btnClearAll, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(btnOrderDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(bntDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(btnExportFileExcel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 742, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel10MouseClicked
    int x, y;
    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        int xx = evt.getXOnScreen();
        int yy = evt.getYOnScreen();
        this.setLocation(xx - x, yy - y);
    }//GEN-LAST:event_jPanel2MouseDragged

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void setDataTable(List<Order> list) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        Locale vnLocale = new Locale("vi", "VN");
        NumberFormat vn = NumberFormat.getInstance(vnLocale);

        modelOrder.setRowCount(0);
        Collections.sort(list, (x1, x2) -> (int) (x2.getId() - x1.getId()));

        int i = 1;
        for (Order o : list) {
            modelOrder.addRow(new Object[]{
                i, o.getId(), o.getCashier(), vn.format(o.getTotal_money()), dateFormat.format(o.getCreated_at())
            });
            i++;
        }
    }

    private void customTable() {
        tblListOrder.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 16));
        tblListOrder.getTableHeader().setOpaque(false);
        tblListOrder.getTableHeader().setBackground(new Color(32, 136, 203));
        tblListOrder.getTableHeader().setForeground(new Color(255, 255, 255));
        tblListOrder.setRowHeight(25);

    }

    private void txtKeySearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKeySearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKeySearchActionPerformed

    private void btnSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseClicked
        List<Order> currentList = new ArrayList<>();

        String keySearch = txtKeySearch.getText().trim();
        int count = 0;
        boolean check = true;

        if (keySearch.isEmpty()) {
            new ErrorsMessageDialog().setMessage("Invalid value!");
        } else {
            currentList.clear();
            listOrder = orderDAO.getList();

            // search by order id
            for (Order o : listOrder) {
                if ((o.getId() + "").contains(keySearch)) {
                    currentList.add(o);
                    check = true;
                    count++;
                } else {
                    check = false;
                }
            }

            // search by cacshier name
            if (check == false) {
                if (orderDAO.selectByName(keySearch) == null) {
                    System.out.println("no res");
                    new ErrorsMessageDialog().setMessage("No result!");
                } else {
                    currentList.addAll(orderDAO.selectByName(keySearch));
                }
            }
            listOrder.clear();
            listOrder.addAll(currentList);
        }

        setDataTable(listOrder);
    }//GEN-LAST:event_btnSearchMouseClicked

    private void bntDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntDeleteMouseClicked
        int indexSelected = tblListOrder.getSelectedRow();

        if (indexSelected == -1) {
            new ErrorsMessageDialog().setMessage("Please choose value!");
        } else {
            int order_id = listOrder.get(indexSelected).getId();
            odtDAO.delete(order_id);
            orderDAO.delete(order_id);

            listOrder = orderDAO.getList();
            setDataTable(listOrder);
            new SuccessfulMessageDialog().setMassage("Delete \"" + order_id + "\" successfully!");
        }
    }//GEN-LAST:event_bntDeleteMouseClicked

    private void btnOrderDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOrderDetailsMouseClicked
        // view order details
        List<OrderDetails> listOrderDetails = new ArrayList<>();
        int indexSelected = tblListOrder.getSelectedRow();

        if (indexSelected == -1) {
            new ErrorsMessageDialog().setMessage("Please choose value!");
        } else {

            ViewOrderDetails od = new ViewOrderDetails(this, rootPaneCheckingEnabled);
            int orderID = listOrder.get(indexSelected).getId();

            listOrderDetails = odtDAO.getList(orderID);
            od.setData(listOrderDetails);
            od.setVisible(true);
        }
    }//GEN-LAST:event_btnOrderDetailsMouseClicked

    private void btnRefreshhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRefreshhMouseClicked
        listOrder = orderDAO.getList();
        setDataTable(listOrder);
    }//GEN-LAST:event_btnRefreshhMouseClicked

    private void bntFilterByDateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bntFilterByDateMouseClicked
        List<Order> currentList = new ArrayList<>();
        List<Date> listDateBetween2Days = new ArrayList<>();

        currentList.clear();
        listDateBetween2Days.clear();

        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");

        Date startDate = this.calStartDate.getDate();
        Date endDate = this.calEndDate.getDate();

        // to do
        if (startDate == null) {
            new ErrorsMessageDialog().setMessage("Please choose start date!");
        } else if (startDate != null && endDate == null) {
            listOrder = orderDAO.getList();
            for (Order o : listOrder) {
                if ((dateFormat.format(o.getCreated_at()) + "").contains(dateFormat.format(startDate))) {
                    currentList.add(o);
                }
            }
        } else {

            // calculate days between 2 day (startDate & endDate)
            int daysDiff = 0;
            long diff = endDate.getTime() - startDate.getTime();
            long diffDays = diff / (24 * 60 * 60 * 1000) + 1;

            daysDiff = (int) diffDays;

            for (int i = 0; i < daysDiff; i++) {
                Calendar cal = new GregorianCalendar();
                cal.setTime(startDate);
                cal.add(Calendar.DATE, i);

                listDateBetween2Days.add(cal.getTime());
            }

            listOrder = orderDAO.getList();
            for (Date date : listDateBetween2Days) {
                for (Order o : listOrder) {
                    if ((dateFormat.format(o.getCreated_at()).contains(dateFormat.format(date)))) {
                        currentList.add(o);
                    }
                }
            }
        }
        setDataTable(currentList);
        listOrder = currentList;
    }//GEN-LAST:event_bntFilterByDateMouseClicked

    private void btnClearAllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearAllMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearAllMouseClicked

    private void btnExportFileExcelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExportFileExcelMouseClicked
        XSSFWorkbook workbook = new XSSFWorkbook();
        XSSFSheet sheet = workbook.createSheet("Order List");

        XSSFRow row = null;
        org.apache.poi.ss.usermodel.Cell cell = null;

        int rownum = 0;
        row = sheet.createRow(rownum);
        
        cell = row.createCell(0, CellType.STRING);
        cell.setCellValue("No");

        cell = row.createCell(1, CellType.STRING);
        cell.setCellValue("Order ID");

        cell = row.createCell(2, CellType.STRING);
        cell.setCellValue("Total Bill");

        cell = row.createCell(3, CellType.STRING);
        cell.setCellValue("Cashier");

        cell = row.createCell(4, CellType.STRING);
        cell.setCellValue("Created At");

        if (listOrder.size() == 0) {
            new ErrorsMessageDialog().setMessage("Can't export!");
        } else {
            FileOutputStream fos = null;
            try {
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");

                Collections.sort(listOrder, (Order o1, Order o2) -> (int) o1.getId() - o2.getId());
                for (Order o : listOrder) {
                    row = sheet.createRow(rownum + 1);

                    cell = row.createCell(0, CellType.NUMERIC);
                    cell.setCellValue(rownum + 1);

                    cell = row.createCell(1, CellType.NUMERIC);
                    cell.setCellValue(o.getId());

                    cell = row.createCell(2, CellType.NUMERIC);
                    cell.setCellValue(o.getTotal_money());

                    cell = row.createCell(3, CellType.STRING);
                    cell.setCellValue(o.getCashier());

                    cell = row.createCell(4, CellType.STRING);
                    cell.setCellValue(dateFormat.format(o.getCreated_at()));
                    rownum++;
                }

                File file = new File("List_Order.xlxs");
                fos = new FileOutputStream(file);
                workbook.write(fos);

                new SuccessfulMessageDialog().setMassage("Export Successfully!");
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally {
                try {
                    fos.close();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnExportFileExcelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException ex) {
                    ex.printStackTrace();
                } catch (InstantiationException ex) {
                    ex.printStackTrace();
                } catch (IllegalAccessException ex) {
                    ex.printStackTrace();
                } catch (UnsupportedLookAndFeelException ex) {
                    ex.printStackTrace();
                }
                new ViewListOrders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bntDelete;
    private javax.swing.JPanel bntFilterByDate;
    private javax.swing.JPanel btnClearAll;
    private javax.swing.JPanel btnExportFileExcel;
    private javax.swing.JPanel btnOrderDetails;
    private javax.swing.JPanel btnRefreshh;
    private javax.swing.JLabel btnSearch;
    private com.toedter.calendar.JDateChooser calEndDate;
    private com.toedter.calendar.JDateChooser calStartDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblListOrder;
    private javax.swing.JTextField txtKeySearch;
    // End of variables declaration//GEN-END:variables
}
